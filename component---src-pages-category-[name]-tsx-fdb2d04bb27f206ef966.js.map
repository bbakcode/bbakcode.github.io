{"version":3,"file":"component---src-pages-category-[name]-tsx-fdb2d04bb27f206ef966.js","mappings":"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","sources":["webpack://bbakcode/./src/components/image/Image.tsx","webpack://bbakcode/./src/components/list/PostList.tsx","webpack://bbakcode/./src/components/list/PostList.module.scss","webpack://bbakcode/./src/components/list/CategoryList.tsx","webpack://bbakcode/./src/components/list/CategoryList.module.scss","webpack://bbakcode/./src/components/list/TagList.tsx","webpack://bbakcode/./src/components/list/TagList.module.scss","webpack://bbakcode/./src/pages/category/[name].tsx"],"sourcesContent":["import {\n  GatsbyImage,\n  GatsbyImageProps,\n  getImage,\n  IGatsbyImageData,\n} from \"gatsby-plugin-image\";\nimport React from \"react\";\n\ninterface ImageProps extends Omit<GatsbyImageProps, \"alt\"> {\n  alt?: string;\n}\n\nconst Image: React.FC<ImageProps> = (props) => {\n  const { image, alt = \"Ïù¥ÎØ∏ÏßÄ\", ...defaultProps } = props;\n  return (\n    <GatsbyImage\n      image={getImage(image) as IGatsbyImageData}\n      alt={alt}\n      {...defaultProps}\n    />\n  );\n};\n\nexport default Image;\n","import { Image } from \"@components/image\";\nimport { Link } from \"@components/link\";\nimport React from \"react\";\nimport * as styles from \"./PostList.module.scss\";\n//import classNames from \"classnames/bind\";\n\ninterface PostListProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"\"> {\n  posts: PostItem[];\n}\n\n//let cx = classNames.bind(styles);\nconst PostList: React.FC<PostListProps> = (props) => {\n  const { posts } = props;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.list}>\n        {posts.map((post) => (\n          <div key={post.id}>\n            <div className={styles.post}>\n              <Link to={post.fields.slug} className={styles.link}>\n                <div className={styles.cover}>\n                  <div className={styles.ratio}></div>\n                  {post.frontmatter.assets && (\n                    <Image\n                      className={styles.thumbnail}\n                      image={post.frontmatter.assets[0].childImageSharp}\n                    />\n                  )}\n                </div>\n                <div className={styles.title}>{post.frontmatter.title}</div>\n                <div className={styles.summary}>{post.frontmatter.summary}</div>\n              </Link>\n              <div className={styles.tag_list}>\n                {post.frontmatter.tags?.map((tag) => {\n                  return (\n                    <Link key={tag} to={`/tag/${tag}`} className={styles.tag}>\n                      {tag}\n                    </Link>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PostList;\n","// extracted by mini-css-extract-plugin\nexport var cover = \"PostList-module--cover--08b80\";\nexport var link = \"PostList-module--link--69336\";\nexport var list = \"PostList-module--list--1a562\";\nexport var post = \"PostList-module--post--b0bb8\";\nexport var ratio = \"PostList-module--ratio--76d3d\";\nexport var root = \"PostList-module--root--9cee7\";\nexport var summary = \"PostList-module--summary--af487\";\nexport var tag = \"PostList-module--tag--8df91\";\nexport var tag_list = \"PostList-module--tag_list--624c5\";\nexport var thumbnail = \"PostList-module--thumbnail--92c1d\";\nexport var title = \"PostList-module--title--edbe6\";","import { Link } from \"@components/link\";\nimport React from \"react\";\nimport * as styles from \"./CategoryList.module.scss\";\n//import classNames from \"classnames/bind\";\n\ninterface CategoryListProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"\"> {\n  categories: CategoryItem[];\n}\n\n//let cx = classNames.bind(styles);\nconst CategoryList: React.FC<CategoryListProps> = (props) => {\n  const { categories } = props;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.wrapper}>\n        <div className={styles.header}>üóÇ Ïπ¥ÌÖåÍ≥†Î¶¨</div>\n        <ul className={styles.list}>\n          {categories?.map((category) => (\n            <li key={category.name}>\n              <Link\n                to={`/category/${category.name}/`}\n                className={styles.category}\n              >\n                <span>{category.name}</span>\n                <span className={styles.count}>{category.count}</span>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default CategoryList;\n","// extracted by mini-css-extract-plugin\nexport var category = \"CategoryList-module--category--41cba\";\nexport var count = \"CategoryList-module--count--9466c\";\nexport var header = \"CategoryList-module--header--b5758\";\nexport var list = \"CategoryList-module--list--619f8\";\nexport var root = \"CategoryList-module--root--e4e9b\";\nexport var wrapper = \"CategoryList-module--wrapper--bee15\";","import { Link } from \"@components/link\";\nimport React from \"react\";\nimport * as styles from \"./TagList.module.scss\";\n//import classNames from \"classnames/bind\";\n\ninterface TagListProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"\"> {\n  tags: TagItem[];\n}\n\n//let cx = classNames.bind(styles);\nconst TagList: React.FC<TagListProps> = (props) => {\n  const { tags } = props;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.wrapper}>\n        <div className={styles.header}>üè∑ ÌÉúÍ∑∏</div>\n        <ul className={styles.list}>\n          {tags?.map((tag) => (\n            <li key={tag.name}>\n              <Link to={`/tag/${tag.name}/`} className={styles.tag}>\n                <span>{tag.name}</span>\n                <span className={styles.count}>{tag.count}</span>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default TagList;\n","// extracted by mini-css-extract-plugin\nexport var count = \"TagList-module--count--33f82\";\nexport var header = \"TagList-module--header--30817\";\nexport var list = \"TagList-module--list--7bc55\";\nexport var root = \"TagList-module--root--d80f0\";\nexport var tag = \"TagList-module--tag--4eaa5\";\nexport var wrapper = \"TagList-module--wrapper--c6a21\";","import { PostList } from \"@components/list\";\nimport { Page } from \"@components/page\";\nimport { Seo } from \"@components/seo\";\nimport { graphql, HeadFC, Link, PageProps } from \"gatsby\";\nimport React from \"react\";\n\ninterface CateogryPageProps extends Omit<PageProps, \"data\" | \"pageContext\"> {\n  data: {\n    allMdx: {\n      posts: PostItem[];\n    };\n  };\n  pageContext: {\n    name: string;\n  };\n}\n//let cx = classNames.bind(styles);\nconst CateogryPage: React.FC<CateogryPageProps> = (props) => {\n  const { data, pageContext } = props;\n  return (\n    <Page\n      nav={[\n        { name: \"üóÇ  Ïπ¥ÌÖåÍ≥†Î¶¨\", path: `/category` },\n        { name: pageContext.name, path: `/category/${pageContext.name}/` },\n      ]}\n    >\n      <PostList posts={data.allMdx?.posts} />\n    </Page>\n  );\n};\n\nexport const Head: HeadFC = () => <Seo />;\n\nexport const categoryPageQuery = graphql`\n  query categoryPageQuery($name: String = \"\") {\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fields: { category: { eq: $name } } }\n    ) {\n      posts: nodes {\n        frontmatter {\n          title\n          summary\n          tags\n          date(formatString: \"MMMM DD, YYYY\")\n          assets {\n            childImageSharp {\n              gatsbyImageData\n            }\n          }\n        }\n        fields {\n          slug\n        }\n        id\n      }\n    }\n  }\n`;\n\nexport default CateogryPage;\n"],"names":["props","image","alt","defaultProps","React","GatsbyImage","getImage","posts","className","map","post","key","id","Link","to","fields","slug","frontmatter","assets","Image","childImageSharp","title","summary","tags","_post$frontmatter$tag","tag","categories","category","name","count","Head","Seo","data","pageContext","Page","nav","path","PostList","allMdx","_data$allMdx"],"sourceRoot":""}